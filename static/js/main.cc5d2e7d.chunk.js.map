{"version":3,"sources":["Moviecard/MovieCard.js","utils/eventEmitter.js","Search/Search.js","Navbar/Navbar.js","Trending/Trending.js","MovieDetails/MovieDetails.js","Toprated/Toprated.js","Upcoming/Upcoming.js","App.js","reportWebVitals.js","index.js"],"names":["MovieCard","movie","history","useHistory","Date","release_date","onClick","push","id","hoverable","style","width","margin","cover","alt","src","poster_path","envData","BASE_POSTER_PATH","EMPTY_IMAGE","fontSize","color","title","original_title","description","vote_average","EventEmitter","_events","dispatch","event","data","this","forEach","callback","subscribe","unsubscribe","Search","useState","query","setQuery","pageNo","setPageNo","totalPages","setTotalPages","movies","setMovies","searchURL","API_KEY","urlQuery","URLSearchParams","useLocation","search","useEffect","get","console","log","axios","then","response","results","total_pages","catch","err","length","map","xs","sm","md","lg","xl","disabled","type","prev","Navbar","car","setCar","className","to","onKeyPress","charCode","target","value","alert","onChange","placeholder","name","class","Trending","trendingURL","MovieDetails","useParams","Object","keys","display","alignItems","textAlign","fontFamily","fontWeight","overview","runtime","genres","genre","justify","production_companies","production_company","logo_path","Toprated","toprated","setToprated","Upcoming","upcoming","setUpcoming","orientation","align","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.cc5d2e7d.chunk.js","sourcesContent":["import { Card } from 'antd'\r\nimport Meta from 'antd/lib/card/Meta'\r\nimport React from 'react'\r\nimport { useHistory } from 'react-router'\r\nimport envData from '../env.json'\r\nconst MovieCard = ({ movie }) => {\r\n    const history = useHistory();\r\n    const clickHandler = () => {\r\n        history.push(`/movie/${movie.id}`);\r\n    }\r\n    let date = new Date(movie.release_date);\r\n    return (\r\n\r\n        <Card\r\n            onClick={clickHandler}\r\n            hoverable\r\n            style={{ width: 240, margin: \"10px 0px\" }}\r\n            cover={<img alt=\"example\" src={movie.poster_path ? `${envData.BASE_POSTER_PATH}${movie.poster_path}` : envData.EMPTY_IMAGE} />}\r\n        >\r\n            <div style={{ fontSize: \"20px\", color: \"black\" }}>\r\n                <Meta title={movie.original_title} description={`${movie.release_date} - ${movie.vote_average || ''}`} />\r\n            </div>\r\n        </Card>\r\n\r\n    )\r\n}\r\nexport default MovieCard","// 2018 original version\r\nconst EventEmitter = {\r\n    _events: {},\r\n    dispatch: function (event, data) {\r\n        if (!this._events[event]) return;\r\n        this._events[event].forEach(callback => callback(data))\r\n    },\r\n    subscribe: function (event, callback) {\r\n        if (!this._events[event]) this._events[event] = [];\r\n        this._events[event].push(callback);\r\n    },\r\n    unsubscribe: function (event) {\r\n        if (!this._events[event]) return;\r\n        delete this._events[event];\r\n    }\r\n}\r\nexport default EventEmitter;","import { Button, Card, Col, Row } from \"antd\";\r\nimport Meta from \"antd/lib/card/Meta\";\r\nimport axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { useLocation } from \"react-router\";\r\nimport envData from '../env.json'\r\nimport MovieCard from \"../Moviecard/MovieCard\";\r\nimport EventEmitter from \"../utils/eventEmitter\";\r\n\r\nconst Search = () => {\r\n    const style = { background: '#0092ff', padding: '8px 0' };\r\n    const [query, setQuery] = useState(\"\")\r\n    const [pageNo, setPageNo] = useState(1)\r\n    const [totalPages, setTotalPages] = useState(1)\r\n    const [movies, setMovies] = useState([])\r\n    const searchURL = `https://api.themoviedb.org/3/search/movie?api_key=${envData.API_KEY}&language=en-US&page=${pageNo}&include_adult=false&query=${query}`\r\n\r\n    let urlQuery = useQuery();\r\n\r\n\r\n    function useQuery() {\r\n        return new URLSearchParams(useLocation().search);\r\n    }\r\n    useEffect(() => {\r\n\r\n        setQuery(urlQuery.get(\"query\"))\r\n        if (query) {\r\n            console.log(searchURL, query)\r\n            axios.get(searchURL)\r\n                .then((response) => {\r\n                    console.log(response.data)\r\n                    setMovies(response.data.results)\r\n                    setTotalPages(response.data.total_pages)\r\n                })\r\n                .catch(err => {\r\n                    console.log(err)\r\n                })\r\n        }\r\n        // EventEmitter.subscribe('search', (event) => {\r\n\r\n        //     console.log(event)\r\n        // })\r\n\r\n    }, [query, pageNo])\r\n\r\n    useEffect(() => {\r\n        EventEmitter.subscribe('search', (query) => {\r\n            console.log(query)\r\n            setQuery(query)\r\n        })\r\n        return () => {\r\n            EventEmitter.unsubscribe('search')\r\n        }\r\n    })\r\n\r\n    return (\r\n        <div>\r\n            <h1>Search</h1>\r\n            {/* <Card\r\n                hoverable\r\n                style={{ width: 240 }}\r\n                cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n            >\r\n                <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n            </Card> */}\r\n\r\n            {\r\n                movies.length > 0 ?\r\n                    <Row>\r\n\r\n                        {movies.map((movie) => {\r\n                            return <Col xs={24} sm={12} md={8} lg={6} xl={6}>\r\n                                {/* <Card\r\n                                    hoverable\r\n                                    style={{ width: 240 }}\r\n                                    cover={<img alt=\"example\" src={movie.poster_path ? `${envData.BASE_POSTER_PATH}${movie.poster_path}` : envData.EMPTY_IMAGE} />}\r\n                                >\r\n                                    <Meta title={movie.original_title} description=\"www.instagram.com\" />\r\n                                </Card>               */}\r\n                                <MovieCard movie={movie} />\r\n                            </Col>\r\n                        })}\r\n\r\n\r\n                    </Row> : null\r\n\r\n            }\r\n            <Button disabled={pageNo === 1} onClick={() => {\r\n                setPageNo(1)\r\n            }} type=\"primary\">First</Button>\r\n            <Button disabled={pageNo === 1} onClick={() => {\r\n                setPageNo(prev => {\r\n                    return prev - 1\r\n                })\r\n            }} type=\"primary\">Previous</Button>\r\n\r\n            {pageNo} <Button disabled={pageNo === totalPages} onClick={() => {\r\n                setPageNo(prev => {\r\n                    return prev + 1\r\n                })\r\n            }} type=\"primary\">Next</Button>\r\n            <Button disabled={pageNo === totalPages} onClick={() => {\r\n                setPageNo(totalPages)\r\n            }} type=\"primary\">Last</Button>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Search;","import React, { useState, useEffect } from \"react\";\r\nimport \"./Navbar.css\"\r\nimport {\r\n    HashRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useLocation\r\n} from \"react-router-dom\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport EventEmitter from \"../utils/eventEmitter\";\r\n\r\n\r\nconst Navbar = () => {\r\n    const history = useHistory();\r\n\r\n    const [car, setCar] = useState([])\r\n    const onKeyPress = (event) => {\r\n        if (event.charCode === 13) {\r\n            if (!event.target.value)\r\n                alert(\"enter something\")\r\n            else {\r\n                history.push(`/search?query=${car}`);\r\n                EventEmitter.dispatch('search', event.target.value)\r\n            }\r\n        }\r\n\r\n\r\n\r\n    }\r\n    const onChange = (event) => {\r\n        console.log(event)\r\n        setCar(event.target.value)\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <nav className=\"nav\" >\r\n                <ul className=\"nav\">\r\n                    <li className=\"l\"><Link to=\"/\">Home</Link></li>\r\n                    <li className=\"l\"><Link to=\"/toprated\">Toprated</Link></li>\r\n                    <li className=\"l\"><Link to=\"/upcoming\">Upcoming</Link></li>\r\n\r\n                </ul>\r\n                <input className=\"i\" onKeyPress={onKeyPress} onChange={onChange} type=\"text\" placeholder=\"Search..\" name=\"search\"></input>\r\n                <button className=\"b\" type=\"submit\"><i class=\"fa fa-search\"></i></button>\r\n            </nav>\r\n\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Navbar","import { Button, Col, Row } from 'antd'\r\nimport axios from 'axios'\r\nimport React, { useEffect, useState } from 'react'\r\nimport envData from '../env.json'\r\nimport MovieCard from '../Moviecard/MovieCard'\r\n\r\nconst Trending = () => {\r\n    const [pageNo, setPageNo] = useState(1)\r\n    const [totalPages, setTotalPages] = useState(1)\r\n    const [movies, setMovies] = useState([])\r\n    const trendingURL = `https://api.themoviedb.org/3/trending/movie/week?api_key=${envData.API_KEY}&page=${pageNo}`\r\n    useEffect(() => {\r\n        axios.get(trendingURL)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                setMovies(response.data.results)\r\n                setTotalPages(response.data.total_pages)\r\n            })\r\n\r\n\r\n    }, [pageNo])\r\n    return (\r\n        <div>\r\n            <h1>Trending</h1>\r\n            {/* <Card\r\n                hoverable\r\n                style={{ width: 240 }}\r\n                cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n            >\r\n                <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n            </Card> */}\r\n\r\n            {\r\n                movies.length > 0 ?\r\n                    <Row>\r\n\r\n                        {movies.map((movie) => {\r\n                            return <Col xs={24} sm={12} md={8} lg={6} xl={6}>\r\n                                {/* <Card\r\n                                    hoverable\r\n                                    style={{ width: 240 }}\r\n                                    cover={<img alt=\"example\" src={movie.poster_path ? `${envData.BASE_POSTER_PATH}${movie.poster_path}` : envData.EMPTY_IMAGE} />}\r\n                                >\r\n                                    <Meta title={movie.original_title} description=\"www.instagram.com\" />\r\n                                </Card>               */}\r\n                                <MovieCard movie={movie} />\r\n                            </Col>\r\n                        })}\r\n\r\n\r\n                    </Row> : null\r\n\r\n            }\r\n            <Button disabled={pageNo === 1} onClick={() => {\r\n                setPageNo(1)\r\n            }} type=\"primary\">First</Button>\r\n            <Button disabled={pageNo === 1} onClick={() => {\r\n                setPageNo(prev => {\r\n                    return prev - 1\r\n                })\r\n            }} type=\"primary\">Previous</Button>\r\n\r\n            {pageNo} <Button disabled={pageNo === totalPages} onClick={() => {\r\n                setPageNo(prev => {\r\n                    return prev + 1\r\n                })\r\n            }} type=\"primary\">Next</Button>\r\n            <Button disabled={pageNo === totalPages} onClick={() => {\r\n                setPageNo(totalPages)\r\n            }} type=\"primary\">Last</Button>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Trending","import { Card, Col, Row, Space } from 'antd';\r\nimport axios from 'axios';\r\nimport React, { useEffect, useState } from 'react'\r\nimport { useParams } from 'react-router-dom';\r\nimport envData from '../env.json'\r\n\r\n\r\nconst MovieDetails = () => {\r\n    const [movie, setMovies] = useState({})\r\n    let { id } = useParams();\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/movie/${id}?api_key=${envData.API_KEY}`)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                setMovies(response.data)\r\n            })\r\n\r\n    }, [])\r\n\r\n    return (\r\n        <div style={\r\n            { width: \"100%\" }\r\n\r\n        }>\r\n            {Object.keys(movie).length > 0 ?\r\n                <> <div style={\r\n                    { display: 'flex', alignItems: \"center\" }\r\n                }>\r\n\r\n                    <img style={{ width: 240, margin: \"auto\" }} alt=\"example\" src={movie.poster_path ? `${envData.BASE_POSTER_PATH}${movie.poster_path}` : envData.EMPTY_IMAGE} />\r\n\r\n                </div ><br></br>\r\n                    <div style={\r\n                        { textAlign: \"center\", fontSize: \"35px\", fontFamily: \"Cursive\"}\r\n                    }>\r\n                        <div style={\r\n                            { fontWeight: \"bold\" }\r\n                        }>\r\n                            {movie.original_title}<br></br>\r\n                        </div>\r\n                        Rating : {movie.vote_average}<br></br>\r\n                        {movie.overview}<br></br>\r\n                Run_Time:{movie.runtime}min<br></br>\r\n                        {movie.genres.map((genre) => {\r\n                            return <>{genre.name}                </>\r\n\r\n                        })}<br></br>\r\n                        <Row justify=\"space-around\">\r\n                            <Space>\r\n                                {movie.production_companies.map((production_company) => {\r\n                                    return <div> <Col xs={24} sm={12} md={8} lg={4} xl={4}></Col> <Card cover={<img style={{ width: 240, margin: \"auto\" }} alt=\"example\" src={production_company.logo_path ? `${envData.BASE_POSTER_PATH}${production_company.logo_path}` : envData.EMPTY_IMAGE} />}> {production_company.name}\r\n\r\n\r\n\r\n                                    </Card>\r\n\r\n\r\n                                    </div>\r\n                                })}\r\n                            </Space>\r\n                        </Row>\r\n                    </div>\r\n\r\n                </> : null}\r\n            <div style={\r\n                { textAlign: \"center\", fontSize: \"30px\" }\r\n            }>\r\n                Release_Date : {movie.release_date}<br></br>\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default MovieDetails","import { Button, Col, Row } from 'antd'\r\nimport axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport MovieCard from '../Moviecard/MovieCard'\r\nimport envData from \"../env.json\"\r\n\r\nconst Toprated = () => {\r\n    const [toprated, setToprated] = useState({})\r\n    const [pageNo, setPageNo] = useState(1)\r\n    const [totalPages, setTotalPages] = useState(1)\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/movie/top_rated?api_key=${envData.API_KEY}&page=${pageNo} `)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                setToprated(response.data.results)\r\n                setTotalPages(response.data.total_pages)\r\n            })\r\n\r\n    }, [pageNo])\r\n    return (\r\n        <div>\r\n            <h1>Toprated</h1>\r\n            {/* <Card\r\n            hoverable\r\n            style={{ width: 240 }}\r\n            cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n        >\r\n            <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n        </Card> */}\r\n\r\n            {\r\n                toprated.length > 0 ?\r\n                    <Row>\r\n\r\n                        {toprated.map((movie) => {\r\n                            return <Col xs={24} sm={12} md={8} lg={6} xl={6}>\r\n                                {/* <Card\r\n                                hoverable\r\n                                style={{ width: 240 }}\r\n                                cover={<img alt=\"example\" src={movie.poster_path ? `${envData.BASE_POSTER_PATH}${movie.poster_path}` : envData.EMPTY_IMAGE} />}\r\n                            >\r\n                                <Meta title={movie.original_title} description=\"www.instagram.com\" />\r\n                            </Card>               */}\r\n                                <MovieCard movie={movie} />\r\n                            </Col>\r\n                        })}\r\n\r\n\r\n                    </Row> : null\r\n\r\n            }\r\n            <Button disabled={pageNo === 1} onClick={() => {\r\n                setPageNo(1)\r\n            }} type=\"primary\">First</Button>\r\n            <Button disabled={pageNo === 1} onClick={() => {\r\n                setPageNo(prev => {\r\n                    return prev - 1\r\n                })\r\n            }} type=\"primary\">Previous</Button>\r\n\r\n            {pageNo} <Button disabled={pageNo === totalPages} onClick={() => {\r\n                setPageNo(prev => {\r\n                    return prev + 1\r\n                })\r\n            }} type=\"primary\">Next</Button>\r\n            <Button disabled={pageNo === totalPages} onClick={() => {\r\n                setPageNo(totalPages)\r\n            }} type=\"primary\">Last</Button>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Toprated","import { Button, Col, Divider, Row } from 'antd'\r\nimport axios from 'axios'\r\nimport React, { useState, useEffect } from 'react'\r\nimport envData from '../env.json'\r\nimport MovieCard from '../Moviecard/MovieCard'\r\nconst Upcoming = () => {\r\n    const [upcoming, setUpcoming] = useState({})\r\n    const [pageNo, setPageNo] = useState(1)\r\n    const [totalPages, setTotalPages] = useState(1)\r\n    useEffect(() => {\r\n        axios.get(`https://api.themoviedb.org/3/movie/upcoming?api_key=${envData.API_KEY}&page=${pageNo} `)\r\n            .then((response) => {\r\n                console.log(response.data)\r\n                setUpcoming(response.data.results)\r\n                setTotalPages(response.data.total_pages)\r\n            })\r\n\r\n    }, [pageNo])\r\n    return (\r\n        <div>\r\n            <h1>Upcoming</h1>\r\n            {/* <Card\r\n            hoverable\r\n            style={{ width: 240 }}\r\n            cover={<img alt=\"example\" src=\"https://os.alipayobjects.com/rmsportal/QBnOOoLaAfKPirc.png\" />}\r\n        >\r\n            <Meta title=\"Europe Street beat\" description=\"www.instagram.com\" />\r\n        </Card> */}\r\n\r\n            {\r\n                upcoming.length > 0 &&\r\n                <div>\r\n\r\n                    <Divider orientation=\"left\">Align Middle</Divider>\r\n\r\n                    <Row justify=\"space-around\" align=\"middle\">\r\n\r\n                        {upcoming.map((movie) => {\r\n                            return <Col xs={24} sm={12} md={8} lg={6} xl={6}>\r\n                                {/* <Card\r\n                                hoverable\r\n                                style={{ width: 240 }}\r\n                                cover={<img alt=\"example\" src={movie.poster_path ? `${envData.BASE_POSTER_PATH}${movie.poster_path}` : envData.EMPTY_IMAGE} />}\r\n                            >\r\n                                <Meta title={movie.original_title} description=\"www.instagram.com\" />\r\n                            </Card>               */}\r\n                                <MovieCard movie={movie} />\r\n                            </Col>\r\n                        })}\r\n\r\n\r\n                    </Row>\r\n                </div>\r\n\r\n            }\r\n\r\n\r\n            <Button disabled={pageNo === 1} onClick={() => {\r\n                setPageNo(1)\r\n            }} type=\"primary\">First</Button>\r\n            <Button disabled={pageNo === 1} onClick={() => {\r\n                setPageNo(prev => {\r\n                    return prev - 1\r\n                })\r\n            }} type=\"primary\">Previous</Button>\r\n\r\n            {pageNo} <Button disabled={pageNo === totalPages} onClick={() => {\r\n                setPageNo(prev => {\r\n                    return prev + 1\r\n                })\r\n            }} type=\"primary\">Next</Button>\r\n            <Button disabled={pageNo === totalPages} onClick={() => {\r\n                setPageNo(totalPages)\r\n            }} type=\"primary\">Last</Button>\r\n\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default Upcoming","import React from \"react\";\nimport Search from \"./Search/Search\";\nimport './App.css';\nimport envData from './env.json'\nimport { HashRouter as Router, Route, Switch } from \"react-router-dom\";\nimport Navbar from \"./Navbar/Navbar\";\nimport Trending from \"./Trending/Trending\";\nimport MovieDetails from \"./MovieDetails/MovieDetails\";\nimport Toprated from \"./Toprated/Toprated\";\nimport Upcoming from \"./Upcoming/Upcoming\";\nfunction App() {\n  const url = `https://api.themoviedb.org/3/trending/movie/week?api_key=${envData.API_KEY}`\n  console.log(envData)\n  return (\n    <div style={{ margin: \"auto\" }}>\n\n      <Router>\n        <div>\n          <Navbar />\n          <Switch>\n            <Route path=\"/\" exact>\n              <Trending />\n            </Route>\n            <Route path=\"/search\">\n              <Search />\n            </Route>\n            <Route path=\"/movie/:id\">\n              <MovieDetails />\n            </Route>\n            <Route path=\"/toprated\">\n              <Toprated />\n            </Route>\n            <Route path=\"/upcoming\">\n              <Upcoming />\n            </Route>\n          </Switch>\n        </div>\n\n\n      </Router>\n\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}